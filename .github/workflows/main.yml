name: Form Entry CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: yarn install --frozen-lockfile

      - name: Setup a local cache server for Turborepo
        uses: felixmosh/turborepo-gh-artifacts@v2
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          server-token: ${{ secrets.TURBO_SERVER_TOKEN }}
      
      - name: Run lint
        run: yarn turbo lint --color --concurrency=5 --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team="${{ github.repository_owner }}"

      - name: Run tests 
        run: yarn turbo test --color --concurrency=5 --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team="${{ github.repository_owner }}"

      - name: Run build
        run: yarn turbo build:lib --color --concurrency=5 --api="http://127.0.0.1:9080" --token="${{ secrets.TURBO_SERVER_TOKEN }}" --team="${{ github.repository_owner }}"

  pre_release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'push' }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: yarn install --frozen-lockfile
      - run: export NEW_VERSION="$(node -e "console.log(require('semver').inc(require('./package.json').version, 'patch'))")-pre.${{ github.run_number }}" && yarn version --new-version $NEW_VERSION --no-git-tag-version && cd projects/ngx-formentry && yarn version --new-version $NEW_VERSION --no-git-tag-version
      - run: yarn turbo build:lib --color --concurrency=5 
      - run: git config user.email "info@openmrs.org" && git config user.name "OpenMRS CI"
      - run: git add . && git commit -m "Prerelease version" --no-verify
      - run: yarn publish dist/ngx-formentry --tag next --access public
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ngx-formentry
          path: |
            dist/ngx-formentry/*.*

  release:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.event_name == 'release' }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: "npm"
      - run: yarn install --frozen-lockfile

      - name: Build
        run: yarn turbo build:lib --color --concurrency=5
      - run: yarn publish dist/ngx-formentry --tag latest --access public
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
